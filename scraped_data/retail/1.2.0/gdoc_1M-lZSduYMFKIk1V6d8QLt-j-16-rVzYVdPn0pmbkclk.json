{
  "doc_id": "1M-lZSduYMFKIk1V6d8QLt-j-16-rVzYVdPn0pmbkclk",
  "title": "Overview",
  "main_content": "Revision History\nVersionDateChanges0.98th Oct 2023Reason codes consolidatedhere;12th Mar 2023Added cancellation reason code \"008\" - order not ready for pickup;16th Feb 2023Added cancellation reason code \"019\" - pickup pincode not serviceable;Added \"Who can use code\" to cancellation reason codes;6th Dec 2022Added \"Whether applicable for refund for non-returnable items\" to return reason codes (3a);Added \"Whether applicable for part cancel\" to cancellation reason codes (2b);4th Dec 2022Added cancellation reason code \"009\"0.830th Oct 2022Updated return approval (refund initiation state) under return (3b) to comply with API contract0.724th Aug 2022Removed \u201ccancelled by\u201d in Cancellation Reasons (2b)0.622nd Aug 2022Changed criteria for order which is cancellable - any order is cancellable, subject to the constraints in the API contract, if all ites in the order have @ondc/org/cancellable = \u201ctrue\u201d in the catalog;For cancellations of prepaid orders, pre-shipment and logistics cost may be borne by the buyer app, as per their discretion;0.528th July 2022Added return reason codesUpdated process flow for returnsUpdated process flow for part cancel - allowed only at fulfillment level if order.state is not \u201cCreated\u201d0.422nd July 2022Updated flows for RTO, returnsUpdated cancellation reason codes0.311th Apr 2022Updated process flows0.222nd Mar 2022Updated process flows0.128th Feb 2022Initial version\nVersion\nDate\nChanges\n0.9\n8th Oct 2023\nReason codes consolidatedhere;\n12th Mar 2023\nAdded cancellation reason code \"008\" - order not ready for pickup;\n16th Feb 2023\nAdded cancellation reason code \"019\" - pickup pincode not serviceable;\nAdded \"Who can use code\" to cancellation reason codes;\n6th Dec 2022\nAdded \"Whether applicable for refund for non-returnable items\" to return reason codes (3a);\nAdded \"Whether applicable for part cancel\" to cancellation reason codes (2b);\n4th Dec 2022\nAdded cancellation reason code \"009\"\n0.8\n30th Oct 2022\nUpdated return approval (refund initiation state) under return (3b) to comply with API contract\n0.7\n24th Aug 2022\nRemoved \u201ccancelled by\u201d in Cancellation Reasons (2b)\n0.6\n22nd Aug 2022\nChanged criteria for order which is cancellable - any order is cancellable, subject to the constraints in the API contract, if all ites in the order have @ondc/org/cancellable = \u201ctrue\u201d in the catalog;\nFor cancellations of prepaid orders, pre-shipment and logistics cost may be borne by the buyer app, as per their discretion;\n0.5\n28th July 2022\nAdded return reason codes\nUpdated process flow for returns\nUpdated process flow for part cancel - allowed only at fulfillment level if order.state is not \u201cCreated\u201d\n0.4\n22nd July 2022\nUpdated flows for RTO, returns\nUpdated cancellation reason codes\n0.3\n11th Apr 2022\nUpdated process flows\n0.2\n22nd Mar 2022\nUpdated process flows\n0.1\n28th Feb 2022\nInitial version\nOverview\nOverview\nThe objective of this note is to propose process flows for Cancellation, Return & Replacement. Cancellation, Return & Replacement can be processed by Buyer & Seller Apps, using existing protocol APIs. The detailed process flows and sequence diagrams are defined below.\nThis note proposes detailed process flows for the following:\nCancellation -for the full order or forpart of an order, i.e. some of the items in an order;\nReturn- for one or moreitemsin an order. A part return will be defined as return of one or more items in an order but not return of all items in the order. A full return will be defined as the return of all items in the order.\nReplacement- for one or more items in an order. A part replacement will be defined as replacement of one or more items in an order but not replacement of all items in the order. A full replacement will be defined as the replacement of all items in the order. Note that a replacement can also be handled by part or full return of the order and creating a new order with the items that are being partly or fully replaced.\nCancellation\nCancellation\nCriteria\nCriteria for order cancellation are defined below:\nAn order is cancellable if all items, in the order, have \u201c@ondc/org/cancellable\u201d = \u201ctrue\u201d in the catalog; a non-cancellable order, if any, will be defined as such by the seller through the seller app as part of the order confirmation process;[a]\nCancellation is possible any time before acceptance of delivery by buyer;\nCancellation may be initiated by\nBuyer or Buyer App for retail / f&b / other product categories\nSeller or Seller App for retail / f&b / other product categories\nLogistics Provider\nThis also covers cases where buyer may refuse acceptance on attempt to deliver and this will trigger the RTO flow;\nReason Codes\nReason Codes\nReason codes arehere;\nProcess flow - Buyer or Buyer App Initiated\nProcess flow - Buyer or Buyer App Initiated\nBuyer can initiate cancellation of order. Alternatively, Buyer App may have a policy to initiate cancellation of order without buyer\u2019s request, due to breach of policy e.g. (shipping time committed + \u201cX\u201d days grace) has lapsed.\nIf buyer initiates the cancellation:\nBuyer requests for order cancellation through the Buyer App, which should accept the cancellation request if the above mentioned criteria are met;\nBuyer confirms cancellation;\nIf buyer app initiates the cancellation, the process flow starts from here:\nBuyer App sends order cancellation request to Seller App, which should accept the cancellation request if the above mentioned criteria are met.If the Seller App does not accept the cancellation request, they can also return a policy error (code 50001) as definedhere;\nOrder cancellation with the Logistics Provider will be initiated by the entity that confirmed the order with the Logistics Provider, i.e. Buyer App or Seller App;\nIn casecancellation is requested after shipment,but before acceptance ofdelivery, Logistics Provider may like to recover shipping charges through the Seller / Buyer App which will be as per theirmutually agreed upon terms & conditions during order confirmation;\nLogistics Provider confirms order cancellationto Seller / Buyer App;\nSeller App confirms order cancellation to Buyer App and updates the status of the order;\nBuyer App confirms order cancellation to Buyer;\nBuyer will be issuedfull or partialrefund, for prepaid order; at the discretion of the buyer app, pre-shipment & other logistics costs incurred, from the entity that collected payment, may be deducted from the buyer;\nSettlement trail is updated in Order.payment.\u201d@ondc/org/settlement_details\u201d with settlement_counterparty = \u201cbuyer\u201d, settlement_phase = \u201crefund\u201d and the appropriate settlement_status;\nSequence diagram - Buyer or Buyer App initiated\nSequence diagram - Buyer or Buyer App initiated\nCancellation of Full Order\nCancellation of order is initiated by Retail Buyer App;\nThis assumes that the order with the Logistics Provider was initiated & confirmed by Retail Seller App. In case the order was initiated & confirmed by Retail Buyer App, participants may adapt the sequence diagram appropriately;\nCancellation of Part Order\nCancellation of order is initiated by Retail Buyer App;\nIf the Order.state is \u201cCreated\u201d, part cancellation can be atitemlevel; otherwise, it will be at fulfillment level;[b][c]\nThis assumes that the order with the Logistics Provider was initiated & confirmed by Retail Seller App. In case the order was initiated & confirmed by Retail Buyer App, participants may adapt the sequence diagram appropriately;\nThis sequence diagram follows the same flow as return but without the reverse logistics;\nProcess flow - Seller App Initiated\nProcess flow - Seller App Initiated\nIf seller app initiates the cancellation, the process flow starts from here:\nSeller App sendsorder cancellation requestto Buyer App, which should accept the cancellation request if the above mentioned criteria are met;\nOrder cancellation with the Logistics Provider will be initiated by the entity that confirmed the order with the Logistics Provider, i.e. Buyer App or Seller App;\nIn case cancellation is requested after shipment,but before acceptance of delivery, Logistics Provider may like to recover shipping charges through the Seller / Buyer App which will be as per their mutually agreed upon terms & conditions during order confirmation;\nLogistics Provider confirms order cancellation to Seller / Buyer App;\nBuyer will be issuedfull or partial refund, for prepaid order; at the discretion of the buyer app, pre-shipment & other logistics costs incurred, from the entity that collected payment, may be deductedfrom the buyer;\nSettlement trail is updated in Order.payment.\u201d@ondc/org/settlement_details\u201d with settlement_counterparty = \u201cbuyer\u201d, settlement_phase = \u201crefund\u201d and the appropriate settlement_status;\nSequence diagram - Seller App initiated\nSequence diagram - Seller App initiated\nCancellation of Full Order\nCancellation of order is initiated by Retail Seller App;\nThis assumes that the order with the Logistics Provider was initiated & confirmed by Retail Seller App. In case the order was initiated & confirmed by Retail Buyer App, participants may adapt the sequence diagram appropriately;\n[d]\nCancellation of Part Order\nCancellation of order is initiated by Retail Seller App;\nIf the Order.state is \u201cCreated\u201d, part cancellation can be at item level; otherwise, it will be at fulfillment level;[e]\nThis assumes that the order with the Logistics Provider was initiated & confirmed by Retail Seller App. In case the order was initiated & confirmed by Retail Buyer App, participants may adapt the sequence diagram appropriately;\nThis sequence diagram follows the same flow as return but without the reverse logistics[f]\nProcess Flow -Logistics Provider Initiated\nProcess Flow -Logistics Provider Initiated\nIf logistics provider initiates the cancellation, the process flow starts from here:\nLogistics Provider sends order cancellation request to entity that confirmed the logistics order i.e. Buyer App or Seller App, which should accept the cancellation request if the above mentioned criteria are met;\nLogistics Provider includes cancellation reason (see above) along with the cancellation request;\nIf cancellation triggers RTO:\n(pre-requisite) Every forward shipment order fulfillment will have a corresponding entry for RTO fulfillment;\nLogistics agent enters reason code and AWB no along with the cancellation request;\nRTO fulfillment initiated and fulfillment.start, fulfillment.state added;\nAfter completion of fulfillment, fulfillment.end updated;\nIf the cause of cancellation is the logistics provider:\nEntity that confirmed the order (Seller App or Buyer App) searches for a new logistics provider, with the same criteria as the previous logistics provider, to deliver the order. In case a new logistics provider cannot be found, the retail order is cancelled;\nIf the retail order is cancelled, Buyer will be issuedfull or partialrefund, for prepaid order; at the discretion of the buyer app,pre-shipment and logistics costs incurred, from the entity that collected payment, may be deducted from the buyer;\nSettlement trail is updated in Order.payment.\u201d@ondc/org/settlement_details\u201d with settlement_counterparty = \u201cbuyer\u201d, settlement_phase = \u201crefund\u201d and the appropriate settlement_status;\nReturns & Replacements\nReturns & Replacements\nBuyer can initiate a return or replacement from a feature in the Buyer App, from which the order was confirmed. An item, in an order, may be returnable or replaceable. Not all items in an order may be returnable or replaceable. A buyer can only choose to return / replace one or more items that were defined as returnable or replaceable.\nIrrespective of how the return is initiated, return & replacement results in an amendment to the order confirmed earlier.\nReason Codes\nReason Codes\nReason codes arehere;\nReturn RejectionReason Codes[g][h][i]\nReturn RejectionReason Codes[g][h][i]\nReason codes arehere;\nProcess Flow -Returns\nProcess Flow -Returns\nAreturn will follow the following steps:\nBuyer initiates the return from the buyer app. To initiate the return, the buyer selects one or more items, from an order, that were identified as returnableand within the return window;\nAfter selecting the items,the buyer uploads images for each item to be returned, identifying the deficiencies / damages, provides reason code for return,ttl for return acceptance by seller, ttl for initiation of reverse QC fulfillment[j]andtriggers the return through the buyer app;\nBuyer app creates an/updaterequest withupdate_target= \u201citem\u201d andorder.itemswith theupdated state of the order, i.e.marking all items marked for return;\nBuyer app signs the auth header for the /update request and sends the request to the corresponding seller app (in case the order was from multiple seller apps, there will be a separate /update request for each seller app);\nIf theSeller Appdoes not explicitlyreject theitem return requestwithinthe ttl defined in the request,the item return will be assumed to be accepted.Also, if the seller app does not explicitly initiate reverse QC fulfillment within the defined ttl, it will be assumed thatthere[k]will be no reverse fulfillment for the return;otherwise, the seller app initiates a request for a logistics provider, to pick up the orderitems[l][m]from the buyer;[n]\nSeller App selects a logistics provider and confirms the order with the logistics provider.\nIn this case:\nFulfillment.type=\u201cReverse QC\u201d[o]\nFulfillment.start.locationwill have the location for pickup (buyer location)\nFulfillment.start.instructions.long_descwill have instructions for reverse QC for the logistics agent (note that the right to inspect and accept the returnable items is generally discretionary and would have been specified at the time of the original confirmed order, as part of policy terms & conditions in the /on_init);\nFulfillment.end.locationwill have the drop location (seller location) andFulfillment.end.instructions.long_descwill have instructions for the logistics agent for the drop;\nSeller App returns the updated order and fulfilment details in/on_update;\nAfter picking up the order items (with or without reverse QC), the logistics provider updatesthe fulfilment state using /on_status to \u201cReturn_Picked\u201d[p]or \u201cLiquidated\u201d and this triggers initiation of refund to the buyer from the entity that collected payment;\nSettlement trail is updated in Order.payment.\u201d@ondc/org/settlement_details[q][r][s]\u201d with settlement_counterparty = \u201cbuyer\u201d, settlement_phase = \u201crefund\u201d and the appropriate settlement_status;\nSequence Diagram - Returns\nSequence Diagram - Returns\nProcess Flow - Replacements[t]\nA replacement will follow the following steps:\nBuyer initiates the replacement from the buyer app. To initiate the replacement, the buyer selects one or more items, from an order, that were identified as replaceable;\nAfter selecting the items, the buyer triggers the replacement through the buyer app;\nBuyer app creates an/updaterequest withupdate_target= \u201citem\u201d andorder.itemsmarking all items for replacement;\nBuyer app signs the auth header for the /update request and sends the request to the seller app (in case the order was from multiple seller apps, there will be a separate /update request for each seller app);\nIn case the Seller App does not accept the/updaterequest for replacement, they can also return a policy error (code 50002) as specifiedhere. Otherwise, on receiving the/updaterequest, the seller app initiates a request for logistics providers for 2 fulfillments:\nPick up the replacement order items from the seller and deliver to buyer;\nPick up the order items, to be replaced, from the buyer and deliver to seller;\nSeller App selects a logistics provider and confirms the order with the logistics provider.\nFor the 1st fulfilment:\nFulfilment.start.locationwill have the location for pickup (seller location);\nFulfillment.end.locationwill have the drop location (buyer location) andFulfillment.end.instructionswill have instructions for the logistics agent for the drop;\nFor the 2nd fulfilment:\nFulfillment.start.locationwill have the location for pickup (buyer location) andFulfillment.start.instructions.long_descwill have instructions for reverse QC for the logistics agent (note that the right to inspect and accept the returnable items is generally discretionary and would have been specified at the time of the original confirmed order, as part of policy terms & conditions in the /on_init);\nFulfillment.end.locationwill have the drop location (seller location) andFulfillment.end.instructions.long_descwill have instructions for the logistics agent for the drop;\nSeller App returns the updated order and fulfilment details in/on_update.\nSequence Diagram - Replacements\n[a]What is the reason id if buyer tries to cancel non-cancellable item. I think exact error message is not available.\n[b]Even when order.state is \"Accepted\", the part cancellation should be allowed at item level.\n[c]Seller has logically accepted.\u00a0 Right after this stage it goes to packaging/shipping is placed.\u00a0 At this stage partial cancellation should not be allowed.\n[d]What is the seller app is also doing its own fulfillment? please explain how the api flow will be in that case?\n[e]How can I send part cancel\u00a0in on_confirm?Or should I call /on_update for the same?\n[f]In this scenario we as seller NP need to send /on_update for part cancellation, but as mention in doc of contract we also needs to pass new fulfillment_id for part cancel\u00a0flow to the Logistics seller NP, but in this diagram it doesn't show any?\n[g]In the case when buyer sends good photo such that the seller access accepts the return request. But when the seller goes to pickup and finds that the buyer was making a false return claim, how can the seller then reject/cancel the request since it's already return_accepted?\n[h]@supriyo@ondc.org\n[i]In that case, status will move from Return_Approved -> Return_Rejected (check API contract v1.2 where this flow is documented). Return_Approved means approved for QC check for return\n[j]@team@ondc.org @supriyo@ondc.org\nI am not sure if i understood this\u00a0correctly. Should the buyer (customer) be able to specify the ttl for return acceptance and ttl for initiation\u00a0of reverse QC in the buyer app UX? \u00a0Or are these values populated/defaulted by the buyer app\u00a0while making the /update API? if so, what are the values that can be sent on these parameters? \u00a0please advice.\n[k]Should the seller search for a new logistics provider for reverse qc or use the same logistics provider that fulfilled the order.\n[l]hi, @supriyo@ondc.org, @sandeep.shahi@ondc.org , @abhinandan@wemotiveforge.com\n` If the seller app does not explicitly initiate reverse QC fulfillment within the defined ttl, it will be assumed that there will be no reverse fulfillment for the return.` Does the statement say the return will be cancelled or do we have to give a refund without a return?\n_Assigned to supriyo@ondc.org_\n[m]check the 1.2 API contract doc for details\n[n]For self-fulfilled\u00a0orders. Seller must pick up the return items within the TTL and close it without making fulfilment entries?\n[o]What are the possible values for fulfillment.state for \"Reverse QC\"? Are they same as Return States?\n[p]Should item.tags.status be changed to \"Return_Picked\" or both\u00a0item.tags.status and fulfillment.state.code for \"Reverse QC\" be changed to \"Return_Picked\"\n[q]@supriyo@ondc.org Can you add an example to the Retail API Contract document in the /on_update section as to how this settlement trail will look like. The the current version of the API contract doc does not have settlement trail in the /on_update api example.\n[r]check the proposed spec here -\u00a0https://docs.google.com/document/d/1ISnZlu8VRagJFX6FH7FiFdtVD8lFcivlD_fEFN41D3w/edit\n[s]@supriyo@ondc.org / @team@ondc.org Could you please confirm if the above document is to be used for referring\u00a0sample updated payloads?\n[t]@team@ondc.org @suprio@ondc.org Is it mandatory to provide replacement option in the buyer app. Can we restrict the possible options to only cancel and return? \u00a0please advice.\n_Assigned to team@ondc.org_",
  "footer_content": "",
  "enums": {
    "populated/defaulted by the buyer app\u00a0while making the /update API? if so, what are the values that can be sent on these parameters? \u00a0please advice.\n[k]Should the seller search for a new logistics provider for reverse qc or use the same logistics provider that fulfilled the order.\n[l]hi, @supriyo@ondc.org, @sandeep.shahi@ondc.org , @abhinandan@wemotiveforge.com\n` If the seller app does not explicitly initiate reverse QC fulfillment within the defined ttl, it will be assumed that there will be no reverse fulfillment for the return.` Does the statement say the return will be cancelled or do we have to give a refund without a return?\n_Assigned to supriyo@ondc.org_\n[m]check the 1.2 API contract doc for details\n[n]For self-fulfilled\u00a0orders. Seller must pick up the return items within the TTL and close it without making fulfilment entries?\n[o]What are the possible values for fulfillment.state for \"Reverse QC\"? Are they same as Return States?\n[p]Should item.tags.status be changed to \"Return_Picked\" or both\u00a0item.tags.status and fulfillment.state.code for \"Reverse QC\" be changed to \"Return_Picked\"\n[q]@supriyo@ondc.org Can you add an example to the Retail API Contract document in the /on_update section as to how this settlement trail will look like. The the current version of the API contract doc does not have settlement trail in the /on_update api example.": [
      "r"
    ]
  },
  "definitions": {
    "Return_Approved": "approved for QC check for return"
  },
  "hyperlinks": [
    {
      "text": "here",
      "url": "https://www.google.com/url?q=https://docs.google.com/spreadsheets/d/1_qAtG6Bu2we3AP6OpXr4GVP3X-32v2xNRNSYQhhR6kA/edit%23gid%3D1095388031&sa=D&source=editors&ust=1751977188467652&usg=AOvVaw2U-SvlOkRzggo9kJzxLEFH",
      "context": "here"
    },
    {
      "text": "here",
      "url": "https://www.google.com/url?q=https://docs.google.com/spreadsheets/d/1_qAtG6Bu2we3AP6OpXr4GVP3X-32v2xNRNSYQhhR6kA/edit%23gid%3D1095388031&sa=D&source=editors&ust=1751977188475448&usg=AOvVaw20olwCRYETrlyc0GvWw8e_",
      "context": "here"
    },
    {
      "text": "here",
      "url": "https://www.google.com/url?q=https://github.com/Open-network-for-digital-commerce/ONDC-Protocol-Specs/blob/master/protocol-specifications/docs/draft/Error%2520Codes.md&sa=D&source=editors&ust=1751977188476686&usg=AOvVaw0jEb1aeR4uyfVSTyafIEzE",
      "context": "here"
    },
    {
      "text": "here",
      "url": "https://www.google.com/url?q=https://docs.google.com/spreadsheets/d/1_qAtG6Bu2we3AP6OpXr4GVP3X-32v2xNRNSYQhhR6kA/edit%23gid%3D1698485244&sa=D&source=editors&ust=1751977188484794&usg=AOvVaw1p3vHLS8wKPu8K1LVW_9Zp",
      "context": "here"
    },
    {
      "text": "he",
      "url": "https://www.google.com/url?q=https://docs.google.com/spreadsheets/d/1_qAtG6Bu2we3AP6OpXr4GVP3X-32v2xNRNSYQhhR6kA/edit%23gid%3D594583443&sa=D&source=editors&ust=1751977188485140&usg=AOvVaw2GD9n5sRtiK9WjzvOoBzso",
      "context": "he"
    },
    {
      "text": "re",
      "url": "https://www.google.com/url?q=https://docs.google.com/spreadsheets/d/1_qAtG6Bu2we3AP6OpXr4GVP3X-32v2xNRNSYQhhR6kA/edit%23gid%3D594583443&sa=D&source=editors&ust=1751977188485261&usg=AOvVaw0UBqEueB7JA3mDrmhwNdfw",
      "context": "re"
    },
    {
      "text": "here",
      "url": "https://www.google.com/url?q=https://github.com/Open-network-for-digital-commerce/ONDC-Protocol-Specs/blob/master/protocol-specifications/docs/draft/Error%2520Codes.md&sa=D&source=editors&ust=1751977188490322&usg=AOvVaw39le3V75QxPDy-kCKBwg_o",
      "context": "here"
    }
  ],
  "version": "unknown",
  "source_url": "https://www.google.com/url?q=https://docs.google.com/document/d/1M-lZSduYMFKIk1V6d8QLt-j-16-rVzYVdPn0pmbkclk/edit%23heading%3Dh.lq5jsehzritb&sa=D&source=editors&ust=1751977163399549&usg=AOvVaw1XyiHGW5JxmERJ0AY4ryWG"
}